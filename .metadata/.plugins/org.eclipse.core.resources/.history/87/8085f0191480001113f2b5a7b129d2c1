package test.Konami;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.*;


@SuppressWarnings("serial")
public class GUIClient extends JFrame implements ActionListener {
	
	// instance variables
	
	private JButton 	buttonSend;
	
	private JTextField 	textIp;
	private JTextField 	textPort;
	
	private JLabel		labelIp;
	private JLabel		labelPort;
	
	private JTextArea 	textAreaOut;
	private JTextArea 	textAreaRespond;
	private JPanel 		JPcenter;
	private JPanel		JPsouth;
	private JPanel		JPnorth;
	private JPanel		JPintern;
	int counter = 1;
	
	
	public GUIClient (String windowName) {
		
		this.setTitle(windowName);
		}
		
	public void go(){
		
		//North panel of the GUI.
		JPnorth							= new JPanel();
		buttonSend							= new JButton("Send Message");
		
		JPnorth.setBackground(Color.lightGray);
		JPnorth.add(buttonSend);
		
		//Center panel of the GUI.
		JPcenter 						= new JPanel();
		JPcenter.setBackground(Color.GRAY);
		
		textAreaRespond 					= new JTextArea(15,30);
		JScrollPane scrollPaneRespond 	= new JScrollPane(textAreaRespond);
		textAreaRespond.setLineWrap(true);
		textAreaRespond.setEditable(false);
		textAreaRespond.setText("Respond Section:");
		

		textAreaOut 						= new JTextArea(15,30);
		JScrollPane scrollPaneOutput 	= new JScrollPane(textAreaOut);
		textAreaOut.setLineWrap(true);
		textAreaOut.setText("Output Section : <place XML data here>");
		
	
		JPcenter.add(scrollPaneOutput);
		JPcenter.add(scrollPaneRespond);
		
		//South panel of the GUI.
		JPsouth 		= new JPanel();
		JPintern		= new JPanel();
		JPintern.setBackground(Color.GRAY);
		
		textIp 			= new JTextField(30);
		textPort			= new JTextField(30);
		
		
		labelIp			= new JLabel("Enter IP");
		labelPort			= new JLabel("Enter Port");
		
		
		JPintern.add(labelIp,BorderLayout.NORTH);
		JPintern.add(textIp, BorderLayout.NORTH);
		
		JPintern.add(labelPort, BorderLayout.SOUTH);
		JPintern.add(textPort, BorderLayout.SOUTH);
		
		JPsouth.add(JPintern,BorderLayout.CENTER);
		
		// Adding to my main JFrame.
		
		this.add(JPnorth, BorderLayout.NORTH);
		this.add(JPcenter, BorderLayout.CENTER);
		this.add(JPsouth, BorderLayout.SOUTH);
		
		//Adding action to buttons and text fields.
		
		buttonSend.addActionListener(this);
		textIp.addActionListener(this);
		textPort.addActionListener(this);
		
		//Settings for the main JFame.
		
		this.setSize (new Dimension(900,400));
		this.setResizable(false);
		this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		this.setBackground(Color.BLACK);
		this.setVisible(true);
		
		}
	
	public JTextArea gettextAreaOut() {
		return textAreaOut;
	}

	public void settextAreaOut(JTextArea textAreaOut) {
		this.textAreaOut = textAreaOut;
	}

	public JTextArea gettextAreaRespond() {
		return textAreaRespond;
	}

	public void settextAreaRespond(JTextArea textAreaRespond) {
		this.textAreaRespond = textAreaRespond;
	}
	
	
	// Method for common action to this class.
	private void buttonAction(){
		
		String ipAddress = textIp.getText();
		int portNumber = 100;
	
		if (gettextAreaOut().getText().isEmpty()) {
			gettextAreaRespond().setText("Error: missing <xml> data in " +
					"Output field");
			return;}
		
		else if (textPort.getText().isEmpty()) {
			gettextAreaRespond().setText("Error: missing port number data in " +
					"Port Number field");
			return;}
		
		else if (textIp.getText().isEmpty()) {
			gettextAreaRespond().setText("Error: missing IP address in " +
					"IP Address field");
			return;}
		
		// Tries to parse input to port number to a Integer.
		
					try	{
			 				portNumber = Integer.parseInt(textPort.getText());}
			
					catch (NumberFormatException e){
			
							gettextAreaRespond().setText("Error: Invaild port number");
							return;}
	
			
		gettextAreaRespond().setText(gettextAreaOut().getText());
				
		ServerAccess SA = new ServerAccess(ipAddress, portNumber);
					
		SA.connect(this, gettextAreaOut().getText()); //sends the test out.
		
		SA.connectClose();
					
					
					
		System.out.println("completed " + counter);
		counter++;}
	

	@Override
	public void actionPerformed(ActionEvent e) {
		
		if (e.getSource() == buttonSend){
			
					this.buttonAction();
			}
		
		else if(e.getSource() == textIp){
			
					this.buttonAction();
			}
		
		else if(e.getSource() == textPort){
			
					this.buttonAction();
			}
	}
}
