package koanami.pack;

import java.io.*;
import java.net.*;

public class ServerAccess implements Runnable {
	
	public Socket connectSocket;
	public PrintWriter out;
    private String serverIp;
    private int serverPort;
    String myServerString = "nothing yet";
    BufferedReader myBR;
    
    

	public ServerAccess(String inputserverIp, int inputserverPort){
		
		this.serverIp = inputserverIp;	
		this.serverPort = inputserverPort;
		//this.gui = GUI;
		
}
	public String getmyServerString (){
		return myServerString;
	}
		
	public void connect(String outPutText) throws IOException{	

//connection objects for writing and reading from the server 
		connectSocket = new Socket(serverIp, serverPort);
		out = new PrintWriter(connectSocket.getOutputStream(), true);
	    out.println(outPutText);
	    out.println("END");
	    
      
} 
	public void receive(){
		Thread client = new Thread(this);
		client.setName("Receive Client");
		client.start();
}
	
    public void run(){  
    	
    	//boolean controlVar = true;
    	try {
			myBR = new BufferedReader(new InputStreamReader(connectSocket.getInputStream()));
			myServerString = myBR.readLine();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	
		/**while (controlVar){
				
			if (myBR.equals("END")){
				controlVar = false;
			}else{
				 = tmp;
			}
		}**/
		
}

// used for closing the socket	
	public void connectClose() throws IOException{
		connectSocket.close();
		out.close();
		myBR.close();
		
	}
 }
